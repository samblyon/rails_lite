quit
exit
file_name
File.read("/Users/Sam/a-a/rails_lite/app/views/users_controler/index.html.erb")
File.read(/Users/Sam/a-a/rails_lite/app/views/users_controler/index.html.erb)
File.read(file_name)
c
file_name
q
file_name
q
__dirname__
__dir__
dirname
file_name
q
file_name
n
q
__dir__
file_name
finish
s
__dir__
File.dirname(__FILE__)
FILE.dirname(__FILE__)
q
require_relative '../app/models/user'
require_relative '../app/controllers/UsersController'
require_relative '../lib/manifest'
require_relative '../lib/db_connection'
require_relative '../lib/application'
require_relative '../lib/router'
require_relative '../lib/controller_base.rb'
c
Dir[__dir__ + '/lib/*.rb']
Dir['../app/models/*.rb']
Dir['../lib/*.rb']
 Dir['../app/*.rb']
 Dir['../app/../*.rb']
 Dir['../app/*/*.rb']
c
Dir[__dir__ + '/app/controllers/*.rb'].each {|file| require file }
Dir[__dir__ + '/app/controllers/*.rb']
Dir[__dir__ + '/app/models/*.rb']
q
Dir[__dir__ + '/app/models/*.rb']
Dir[__dir__ + '/models/*.rb']
__dir__ + '/models/*.rb'
__dir__
Dir.pwd['./models/*.rb']
Dir.pwd
Dir
Dir['./models/*.rb']
File.dirname(__FILE__)
Dir[File.dirname(__FILE__) + '/models/*.rb']
q
Dir["../app/controllers/*.rb"]
Dir["/app/controllers/*.rb"]
q
File.join(Dir.pwd,'config','routes.rb')
FilePath.join(Dir.pwd,'config','routes.rb')
load './../config/routes.rb'
load '../config/routes.rb'
q
Dir.pwd
q
c
@params
@params["authenticity_token"]
@req.cookies['authenticity_token']
c
q
@params["authenticity_token"]
@params[:authenticity_token]
@params
@token
check_authenticity_token
@params
s
n
check_authenticity_token
@req.params.merge(route_params)
@params
q
@params
s
@params
n
@req.params
@params
q
@params
@req.params
@req
c
file
q
File.exist?("./public/hello.txt")
File.exist?("./lib/public/hello.txt")
File.exist?("./lib/public/static.rb")
File.exist?("./bin/p01_basic_server.rb")
File.exist?("../p01_basic_server.rb")
File.exist?("./p01_basic_server.rb")
File.exist?("p01_basic_server.rb")
File.exist?("p01_basic_server_.rb")
File.exist?("../p01_basic_server_.rb")
File.exist?(Rails.root + "skeleton/bin/p01_basic_server_.rb")
File.exist?("./skeleton/bin/p01_basic_server_.rb")
File.exist?("skeleton/bin/p01_basic_server_.rb")
File.exist?(skeleton/bin/p01_basic_server_.rb)
File.exist?(file_path)
file_path
s
n
q
file
n
file_name
n
finish
s
match_data
q
Rack::Request.new(env).path
_.path
Rack::Request.new(env)
env.path
env
q
"www.a.com/dogs.jpg".match(/\/(\w+\.\w+)/)
"www.a.com/dogs.jpg".match(/(\w+\.\w+)/)
"www.a.com/dogs.jpg".match(/((\w+)\.\w+/)/)
"www.a.com/dogs.jpg".match(/((\w+)\.(jpg|css))/)
"www.a.com/dogs.jpg".match(/(\w+)\.(jpg|css)/)
"www.a.com/dogs.jpg".match(/\(\w+).(jpg|css)/)
"www.a.com/dogs.jpg".match(/\.(jpg|css)/)
a.path.match(/\.(jpg|css)/)
a.path
a = Rack::Request.new(env)
Rack::Request.new(env)
env.path
env
q
error.backtrace
error
q
response.status
response[:status]
response[status]
response[2]
response
q
response['Error-Type']
q
pattern
q
req.path
pattern
req
q
params
q
controller_rough_name
quit
controller_rough_name
q
req.path
